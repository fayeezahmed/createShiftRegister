name: Deploy Script

on:
  workflow_dispatch:
  push:
    branches: 
      - main
      - 'feat/**'
      - 'bug/**'
      - 'chore/**'
      - 'docs/**'
  release:
    types: [published]
  schedule:
    - cron: "0 0 * * SUN"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Install clasp
        id: install-clasp
        run: sudo npm install @google/clasp@latest -g

      - name: Write CLASPRC_JSON secret to .clasprc.json file
        id: write-clasprc
        run: echo "$CLASPRC_JSON_SECRET" >> ~/.clasprc.json
        env:
          CLASPRC_JSON_SECRET: ${{ secrets.CLASPRC_JSON }}

      - name: Check clasp login status
        id: clasp_login
        run: clasp login --status

      - name: Save current .clasprc.json contents to CLASPRC_JSON_FILE environment variable
        id: save-clasprc
        run: |
          echo ::add-mask::$(tr -d '\n\r' < ~/.clasprc.json)
          echo "CLASPRC_JSON_FILE=$(tr -d '\n\r' < ~/.clasprc.json)" >> $GITHUB_ENV        
      
      - name: Save CLASPRC_JSON_FILE environment variable to CLASPRC_JSON repo secret
        id: set-clasprc-secret
        if: ${{ env.CLASPRC_JSON_FILE != env.CLASPRC_JSON_SECRET  }}
        uses: hmanzur/actions-set-secret@v2.0.0
        env:
          CLASPRC_JSON_SECRET: ${{ secrets.CLASPRC_JSON }}
        with:
          name: "CLASPRC_JSON"
          value: ${{ env.CLASPRC_JSON_FILE }}
          repository: ${{ github.repository }}
          token: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Checkout repo
        id: checkout-repo
        if: ${{github.event_name != 'schedule' }}
        uses: actions/checkout@v3

      - name: Use node
        id: use-node
        uses: actions/setup-node@v3

      - name: Install
        id: install
        run: "npm install"

      - name: Build
        id: build
        run: "npm run build:webpack"

      - name: Tar files
        id: archive-artifact
        run: | 
          tar -cf build_artifact.tar /home/runner/work/createShiftRegister
          ls /

      - uses: actions/upload-artifact@v3
        id: upload-artifact
        with:
          name: build-artifact
          path: /home/runner/work/createShiftRegister/createShiftRegister/build_artifact.tar

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: build-artifact
          path: /home/runner/work/createShiftRegister

      - name: where am i
        run: |
          ls
          pwd
      - name: Untar files
        id: archive-artifact
        run: |
          tar -xf /home/runner/work/createShiftRegister/build_artifact.tar 
          ls 

      - name: Unit tests
        id: unit-tests
        run: "npm run test"

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: success() && github.ref == 'refs/heads/main'
    steps:
      - name: Set scriptId in .clasp.json file
        id: set-script-id
        if: ${{ github.event_name != 'schedule' && env.SCRIPT_ID}}
        run: jq '.scriptId = "${{env.SCRIPT_ID}}"' .clasp.json > /tmp/.clasp.json && mv /tmp/.clasp.json .clasp.json
        env:
          SCRIPT_ID: ${{secrets.SCRIPT_ID}}

      - name: Push script to scripts.google.com
        id: clasp-push
        if: ${{ github.event_name	!= 'schedule'}}
        run: clasp push -f

      - name: Deploy Script
        id: clasp-deploy
        if: ${{env.DEPLOYMENT_ID && (github.event_name == 'release' || (github.event_name == 'push' && github.ref == 'refs/heads/main'))}}
        run: clasp deploy -i "$DEPLOYMENT_ID" -d "$GITHUB_REF"
        env:
          DEPLOYMENT_ID: ${{ secrets.DEPLOYMENT_ID }}
